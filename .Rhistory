parameters
parameters$growth
if (parameters$growth == 'logistic') {train$cap <- parameters$capacity}
m <- prophet(train, growth = parameters$growth, holidays = holidays,
seasonality.prior.scale = 10,#parameters$seasonality_prior_scale,
changepoint.prior.scale = 0.05,#parameters$changepoint_prior_scale,
holidays.prior.scale = 10)#parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
forecast <- predict(m, future)
m <- prophet(train, growth = 'linear', holidays = holidays,
seasonality.prior.scale = 10,#parameters$seasonality_prior_scale,
changepoint.prior.scale = 0.05,#parameters$changepoint_prior_scale,
holidays.prior.scale = 10)#parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
forecast <- predict(m, future)
parameters
library(tidyverse)
library(lubridate)
library(prophet)
library(forecast)
bikes <- read_csv('bikes.csv') %>%
mutate(datetime = date(datetime))
train <- bikes %>% select(datetime, count) %>%
filter(datetime < as.Date("2012-01-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(train) <- c('ds', 'y')
valid <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-01-01") & datetime < as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(valid) <- c('ds', 'y')
test <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(test) <- c('ds', 'y')
holidays <- filter(bikes, holiday == 1) %>%
select(datetime) %>%
distinct()
holidays$holiday = 'holiday'
names(holidays) <- c('ds', 'holiday')
# From http://webarchive.nationalarchives.gov.uk/20110218142827/direct.gov.uk/en/governmentcitizensandrights/livingintheuk/dg_073741
new_year <- data_frame(ds = as.Date(c('2011-01-03', '2012-01-02')),
holiday = 'New Year')
good_friday <- data_frame(ds = as.Date(c('2011-04-22', '2012-04-06')),
holiday = 'Good Friday')
easter_monday <- data_frame(ds = as.Date(c('2011-04-25', '2012-04-09')),
holiday = 'Easter Monday')
early_may <- data_frame(ds = as.Date(c('2011-05-02', '2012-05-07')),
holiday = 'Early May')
spring <- data_frame(ds = as.Date(c('2011-05-30', '2012-06-04')),
holiday = 'Spring')
summer <- data_frame(ds = as.Date(c('2011-08-29', '2012-08-27')),
holiday = 'Summer')
christmas <- data_frame(ds = as.Date(c('2011-12-26', '2012-12-25')),
holiday = 'Christmas')
boxing_day <- data_frame(ds = as.Date(c('2011-12-27', '2012-12-26')),
holiday = 'Boxing Day')
holidays <- bind_rows(holidays, new_year, good_friday, easter_monday, early_may, spring,
summer, christmas, boxing_day)
p <- ggplot(train, aes(x = ds, y = y))
p <- p + geom_point(size = 0.5)
p
m <- prophet(train, growth = 'linear', holidays = holidays,
seasonality.prior.scale = 10,#parameters$seasonality_prior_scale,
changepoint.prior.scale = 0.05,#parameters$changepoint_prior_scale,
holidays.prior.scale = 10)#parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
forecast <- predict(m, future)
library(tidyverse)
library(lubridate)
library(prophet)
library(forecast)
bikes <- read_csv('bikes.csv') %>%
mutate(datetime = date(datetime))
train <- bikes %>% select(datetime, count) %>%
filter(datetime < as.Date("2012-01-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(train) <- c('ds', 'y')
valid <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-01-01") & datetime < as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(valid) <- c('ds', 'y')
test <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(test) <- c('ds', 'y')
holidays <- filter(bikes, holiday == 1) %>%
select(datetime) %>%
distinct()
holidays$holiday = 'holiday'
names(holidays) <- c('ds', 'holiday')
# From http://webarchive.nationalarchives.gov.uk/20110218142827/direct.gov.uk/en/governmentcitizensandrights/livingintheuk/dg_073741
new_year <- data_frame(ds = as.Date(c('2011-01-03', '2012-01-02')),
holiday = 'New Year')
good_friday <- data_frame(ds = as.Date(c('2011-04-22', '2012-04-06')),
holiday = 'Good Friday')
easter_monday <- data_frame(ds = as.Date(c('2011-04-25', '2012-04-09')),
holiday = 'Easter Monday')
early_may <- data_frame(ds = as.Date(c('2011-05-02', '2012-05-07')),
holiday = 'Early May')
spring <- data_frame(ds = as.Date(c('2011-05-30', '2012-06-04')),
holiday = 'Spring')
summer <- data_frame(ds = as.Date(c('2011-08-29', '2012-08-27')),
holiday = 'Summer')
christmas <- data_frame(ds = as.Date(c('2011-12-26', '2012-12-25')),
holiday = 'Christmas')
boxing_day <- data_frame(ds = as.Date(c('2011-12-27', '2012-12-26')),
holiday = 'Boxing Day')
holidays <- bind_rows(holidays, new_year, good_friday, easter_monday, early_may, spring,
summer, christmas, boxing_day)
p <- ggplot(train, aes(x = ds, y = y))
p <- p + geom_point(size = 0.5)
p
prophetGrid <- expand.grid(changepoint_prior_scale = c(0.05, 0.5, 0.001),
seasonality_prior_scale = c(100, 10, 1),
holidays_prior_scale = c(100, 10, 1),
capacity = c(6043, 6500, 7000, 8000),
growth = c('linear', 'logistic'))
prophetGrid <- prophetGrid[-c(28:108), ]
prophetGrid[prophetGrid$growth == 'linear', 'capacity'] <- NA
prophetGrid$growth <- as.character(prophetGrid$growth)
results <- vector(mode = 'numeric', length = nrow(prophetGrid))
i <- 1
parameters <- prophetGrid[i, ]
if (parameters$growth == 'logistic') {train$cap <- parameters$capacity}
m <- prophet(train, growth = 'linear', holidays = holidays,
seasonality.prior.scale = 10,#parameters$seasonality_prior_scale,
changepoint.prior.scale = 0.05,#parameters$changepoint_prior_scale,
holidays.prior.scale = 10)#parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
forecast <- predict(m, future)
results[i] <- forecast::accuracy(forecast[forecast$ds %in% valid$ds, 'yhat'], valid$y)[ , 'MAPE']
parameters <- prophetGrid[i, ]
if (parameters$growth == 'logistic') {train$cap <- parameters$capacity}
m <- prophet(train, growth = parameters$growth, holidays = holidays,
seasonality.prior.scale = 10,#parameters$seasonality_prior_scale,
changepoint.prior.scale = 0.05,#parameters$changepoint_prior_scale,
holidays.prior.scale = 10)#parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
forecast <- predict(m, future)
results[i] <- forecast::accuracy(forecast[forecast$ds %in% valid$ds, 'yhat'], valid$y)[ , 'MAPE']
parameters <- prophetGrid[i, ]
if (parameters$growth == 'logistic') {train$cap <- parameters$capacity}
m <- prophet(train, growth = parameters$growth, holidays = holidays,
seasonality.prior.scale = parameters$seasonality_prior_scale,
changepoint.prior.scale = parameters$changepoint_prior_scale,
holidays.prior.scale = parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
forecast <- predict(m, future)
results[i] <- forecast::accuracy(forecast[forecast$ds %in% valid$ds, 'yhat'], valid$y)[ , 'MAPE']
library(tidyverse)
library(lubridate)
library(prophet)
library(forecast)
bikes <- read_csv('bikes.csv') %>%
mutate(datetime = date(datetime))
train <- bikes %>% select(datetime, count) %>%
filter(datetime < as.Date("2012-01-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(train) <- c('ds', 'y')
valid <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-01-01") & datetime < as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(valid) <- c('ds', 'y')
test <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(test) <- c('ds', 'y')
holidays <- filter(bikes, holiday == 1) %>%
select(datetime) %>%
distinct()
holidays$holiday = 'holiday'
names(holidays) <- c('ds', 'holiday')
# From http://webarchive.nationalarchives.gov.uk/20110218142827/direct.gov.uk/en/governmentcitizensandrights/livingintheuk/dg_073741
new_year <- data_frame(ds = as.Date(c('2011-01-03', '2012-01-02')),
holiday = 'New Year')
good_friday <- data_frame(ds = as.Date(c('2011-04-22', '2012-04-06')),
holiday = 'Good Friday')
easter_monday <- data_frame(ds = as.Date(c('2011-04-25', '2012-04-09')),
holiday = 'Easter Monday')
early_may <- data_frame(ds = as.Date(c('2011-05-02', '2012-05-07')),
holiday = 'Early May')
spring <- data_frame(ds = as.Date(c('2011-05-30', '2012-06-04')),
holiday = 'Spring')
summer <- data_frame(ds = as.Date(c('2011-08-29', '2012-08-27')),
holiday = 'Summer')
christmas <- data_frame(ds = as.Date(c('2011-12-26', '2012-12-25')),
holiday = 'Christmas')
boxing_day <- data_frame(ds = as.Date(c('2011-12-27', '2012-12-26')),
holiday = 'Boxing Day')
holidays <- bind_rows(holidays, new_year, good_friday, easter_monday, early_may, spring,
summer, christmas, boxing_day)
p <- ggplot(train, aes(x = ds, y = y))
p <- p + geom_point(size = 0.5)
p
prophetGrid <- expand.grid(changepoint_prior_scale = c(0.05, 0.5, 0.001),
seasonality_prior_scale = c(100, 10, 1),
holidays_prior_scale = c(100, 10, 1),
capacity = c(6043, 6500, 7000, 8000),
growth = c('linear', 'logistic'))
prophetGrid <- prophetGrid[-c(28:108), ]
prophetGrid[prophetGrid$growth == 'linear', 'capacity'] <- NA
prophetGrid$growth <- as.character(prophetGrid$growth)
results <- vector(mode = 'numeric', length = nrow(prophetGrid))
for (i in seq_len(nrow(prophetGrid))) {
parameters <- prophetGrid[i, ]
if (parameters$growth == 'logistic') {train$cap <- parameters$capacity}
m <- prophet(train, growth = parameters$growth, holidays = holidays,
seasonality.prior.scale = parameters$seasonality_prior_scale,
changepoint.prior.scale = parameters$changepoint_prior_scale,
holidays.prior.scale = parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
# NOTE: There's a problem in function names with library(caret)
forecast <- predict(m, future)
#tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
#forecast$ds <- as.POSIXct(forecast$ds)
#forecast$ds[seq_len(nrow(train))] <- train$datetime
#forecast$ds[5423:nrow(forecast)] <- seq(ymd_hms('2011-12-20 01:00:00'), by = 'day', length.out = 364)
results[i] <- forecast::accuracy(forecast[forecast$ds %in% valid$ds, 'yhat'], valid$y)[ , 'MAPE']
}
plot(results, type = 'l')
min(results)
results[results < 23]
results[results < 22.09]
prophetGrid <- cbind(prophetGrid, results)
prophetGrid[results < 22.09]
prophetGrid[results < 22.09, ]
prophetGrid[results < 23, ]
retrain <- bind_rows(train, valid)
head(retrain)
retrain <- bind_rows(train, valid)
retrain$cap <- 8000
future <- make_future_dataframe(m, periods = 184)
m <- prophet(retrain, growth = 'logistic', holidays = holidays,
seasonality.prior.scale = 10,
changepoint.prior.scale = 0.001,
holidays.prior.scale = 1)
future <- make_future_dataframe(m, periods = 184)
future$cap <- 8000
tail(future)
forecast::accuracy(forecast[forecast$ds %in% test$ds, 'yhat'], test$y)[ , 'MAPE']
forecast <- predict(m, future)
forecast::accuracy(forecast[forecast$ds %in% test$ds, 'yhat'], test$y)[ , 'MAPE']
plot(m, forecast)
prophet_plot_components(m, forecast)
p <- ggplot()
p <- p + geom_point(data = train, aes(x = ds, y = y), size = 0.5)
p <- p + geom_line(data = forecast, aes(x = ds, y = yhat), color = "#0072B2")
p <- p + geom_ribbon(data = forecast, aes(x = ds, ymin = yhat_lower, ymax = yhat_upper), fill = "#0072B2", alpha = 0.3)
p <- p + geom_point(data = valid, aes(x = ds, y = y), size = 0.5, color = '#4daf4a')
p
plot(m, forecast)
p <- ggplot()
p <- p + geom_point(data = train, aes(x = ds, y = y), size = 0.5)
p <- p + geom_line(data = forecast, aes(x = ds, y = yhat), color = "#0072B2")
p <- p + geom_ribbon(data = forecast, aes(x = ds, ymin = yhat_lower, ymax = yhat_upper), fill = "#0072B2", alpha = 0.3)
p <- p + geom_point(data = valid, aes(x = ds, y = y), size = 0.5, color = '#4daf4a')
p <- p + geom_point(data = test, aes(x = ds, y = y), size = 0.5, color = 'red')
p
library(tidyverse)
library(lubridate)
library(prophet)
library(forecast)
bikes <- read_csv('bikes.csv') %>%
mutate(datetime = date(datetime))
train <- bikes %>% select(datetime, count) %>%
filter(datetime < as.Date("2012-01-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(train) <- c('ds', 'y')
valid <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-01-01") & datetime < as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(valid) <- c('ds', 'y')
test <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(test) <- c('ds', 'y')
holidays <- filter(bikes, holiday == 1) %>%
select(datetime) %>%
distinct()
holidays$holiday = 'holiday'
names(holidays) <- c('ds', 'holiday')
# From http://webarchive.nationalarchives.gov.uk/20110218142827/direct.gov.uk/en/governmentcitizensandrights/livingintheuk/dg_073741
new_year <- data_frame(ds = as.Date(c('2011-01-03', '2012-01-02')),
holiday = 'New Year')
good_friday <- data_frame(ds = as.Date(c('2011-04-22', '2012-04-06')),
holiday = 'Good Friday')
easter_monday <- data_frame(ds = as.Date(c('2011-04-25', '2012-04-09')),
holiday = 'Easter Monday')
early_may <- data_frame(ds = as.Date(c('2011-05-02', '2012-05-07')),
holiday = 'Early May')
spring <- data_frame(ds = as.Date(c('2011-05-30', '2012-06-04')),
holiday = 'Spring')
summer <- data_frame(ds = as.Date(c('2011-08-29', '2012-08-27')),
holiday = 'Summer')
christmas <- data_frame(ds = as.Date(c('2011-12-26', '2012-12-25')),
holiday = 'Christmas')
boxing_day <- data_frame(ds = as.Date(c('2011-12-27', '2012-12-26')),
holiday = 'Boxing Day')
holidays <- bind_rows(holidays, new_year, good_friday, easter_monday, early_may, spring,
summer, christmas, boxing_day)
p <- ggplot(train, aes(x = ds, y = y))
p <- p + geom_point(size = 0.5)
p
prophetGrid <- expand.grid(changepoint_prior_scale = c(0.05, 0.5, 0.001),
seasonality_prior_scale = c(100, 10, 1),
holidays_prior_scale = c(100, 10, 1),
capacity = c(6043, 6500, 7000, 8000),
growth = c('linear', 'logistic'))
prophetGrid <- prophetGrid[-c(28:108), ]
prophetGrid[prophetGrid$growth == 'linear', 'capacity'] <- NA
prophetGrid$growth <- as.character(prophetGrid$growth)
results <- vector(mode = 'numeric', length = nrow(prophetGrid))
for (i in seq_len(nrow(prophetGrid))) {
parameters <- prophetGrid[i, ]
if (parameters$growth == 'logistic') {train$cap <- parameters$capacity}
set.seed(12321)
m <- prophet(train, growth = parameters$growth, holidays = holidays,
seasonality.prior.scale = parameters$seasonality_prior_scale,
changepoint.prior.scale = parameters$changepoint_prior_scale,
holidays.prior.scale = parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
# NOTE: There's a problem in function names with library(caret)
forecast <- predict(m, future)
#tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
#forecast$ds <- as.POSIXct(forecast$ds)
#forecast$ds[seq_len(nrow(train))] <- train$datetime
#forecast$ds[5423:nrow(forecast)] <- seq(ymd_hms('2011-12-20 01:00:00'), by = 'day', length.out = 364)
results[i] <- forecast::accuracy(forecast[forecast$ds %in% valid$ds, 'yhat'], valid$y)[ , 'MAPE']
}
library(tidyverse)
library(lubridate)
library(prophet)
library(forecast)
bikes <- read_csv('bikes.csv') %>%
mutate(datetime = date(datetime))
train <- bikes %>% select(datetime, count) %>%
filter(datetime < as.Date("2012-01-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(train) <- c('ds', 'y')
valid <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-01-01") & datetime < as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(valid) <- c('ds', 'y')
test <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(test) <- c('ds', 'y')
holidays <- filter(bikes, holiday == 1) %>%
select(datetime) %>%
distinct()
holidays$holiday = 'holiday'
names(holidays) <- c('ds', 'holiday')
# From http://webarchive.nationalarchives.gov.uk/20110218142827/direct.gov.uk/en/governmentcitizensandrights/livingintheuk/dg_073741
new_year <- data_frame(ds = as.Date(c('2011-01-03', '2012-01-02')),
holiday = 'New Year')
good_friday <- data_frame(ds = as.Date(c('2011-04-22', '2012-04-06')),
holiday = 'Good Friday')
easter_monday <- data_frame(ds = as.Date(c('2011-04-25', '2012-04-09')),
holiday = 'Easter Monday')
early_may <- data_frame(ds = as.Date(c('2011-05-02', '2012-05-07')),
holiday = 'Early May')
spring <- data_frame(ds = as.Date(c('2011-05-30', '2012-06-04')),
holiday = 'Spring')
summer <- data_frame(ds = as.Date(c('2011-08-29', '2012-08-27')),
holiday = 'Summer')
christmas <- data_frame(ds = as.Date(c('2011-12-26', '2012-12-25')),
holiday = 'Christmas')
boxing_day <- data_frame(ds = as.Date(c('2011-12-27', '2012-12-26')),
holiday = 'Boxing Day')
holidays <- bind_rows(holidays, new_year, good_friday, easter_monday, early_may, spring,
summer, christmas, boxing_day)
p <- ggplot(train, aes(x = ds, y = y))
p <- p + geom_point(size = 0.5)
p
prophetGrid <- expand.grid(changepoint_prior_scale = c(0.05, 0.5, 0.001),
seasonality_prior_scale = c(100, 10, 1),
holidays_prior_scale = c(100, 10, 1),
capacity = c(6043, 6500, 7000, 8000),
growth = c('linear', 'logistic'))
prophetGrid <- prophetGrid[-c(28:108), ]
prophetGrid[prophetGrid$growth == 'linear', 'capacity'] <- NA
prophetGrid$growth <- as.character(prophetGrid$growth)
results <- vector(mode = 'numeric', length = nrow(prophetGrid))
for (i in seq_len(nrow(prophetGrid))) {
parameters <- prophetGrid[i, ]
if (parameters$growth == 'logistic') {train$cap <- parameters$capacity}
set.seed(12321)
m <- prophet(train, growth = parameters$growth, holidays = holidays,
seasonality.prior.scale = parameters$seasonality_prior_scale,
changepoint.prior.scale = parameters$changepoint_prior_scale,
holidays.prior.scale = parameters$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
if (parameters$growth == 'logistic') {future$cap <- parameters$capacity}
# NOTE: There's a problem in function names with library(caret)
forecast <- predict(m, future)
#tail(forecast[c('ds', 'yhat', 'yhat_lower', 'yhat_upper')])
#forecast$ds <- as.POSIXct(forecast$ds)
#forecast$ds[seq_len(nrow(train))] <- train$datetime
#forecast$ds[5423:nrow(forecast)] <- seq(ymd_hms('2011-12-20 01:00:00'), by = 'day', length.out = 364)
results[i] <- forecast::accuracy(forecast[forecast$ds %in% valid$ds, 'yhat'], valid$y)[ , 'MAE']
}
prophetGrid <- cbind(prophetGrid, results)
plot(results, type = 'l')
min(results)
prophetGrid[prophetGrid$results == min(results), ]
best_params <- prophetGrid[prophetGrid$results == min(results), ]
retrain <- bind_rows(train, valid)
retrain$cap <- best_params$capacity
m <- prophet(retrain, growth = 'logistic', holidays = holidays,
seasonality.prior.scale = best_params$seasonality_prior_scale,
changepoint.prior.scale = best_params$changepoint_prior_scale,
holidays.prior.scale = best_params$holidays_prior_scale)
future <- make_future_dataframe(m, periods = 184)
future$cap <- best_params$capacity
forecast <- predict(m, future)
forecast::accuracy(forecast[forecast$ds %in% test$ds, 'yhat'], test$y)[ , 'MAE']
plot(m, forecast)
prophet_plot_components(m, forecast)
p <- ggplot()
p <- p + geom_point(data = train, aes(x = ds, y = y), size = 0.5)
p <- p + geom_line(data = forecast, aes(x = ds, y = yhat), color = "#0072B2")
p <- p + geom_ribbon(data = forecast, aes(x = ds, ymin = yhat_lower, ymax = yhat_upper), fill = "#0072B2", alpha = 0.3)
p <- p + geom_point(data = valid, aes(x = ds, y = y), size = 0.5, color = '#4daf4a')
p <- p + geom_point(data = test, aes(x = ds, y = y), size = 0.5, color = 'red')
p
holidays
library(tidyverse)
library(lubridate)
library(prophet)
library(forecast)
bikes <- read_csv('bikes.csv') %>%
mutate(datetime = date(datetime))
train <- bikes %>% select(datetime, count) %>%
filter(datetime < as.Date("2012-01-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(train) <- c('ds', 'y')
valid <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-01-01") & datetime < as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(valid) <- c('ds', 'y')
test <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(test) <- c('ds', 'y')
holidays <- filter(bikes, holiday == 1) %>%
select(datetime) %>%
distinct()
holidays$holiday = 'holiday'
names(holidays) <- c('ds', 'holiday')
holidays
library(tidyverse)
library(lubridate)
library(prophet)
library(forecast)
bikes <- read_csv('bikes.csv') %>%
mutate(datetime = date(datetime))
train <- bikes %>% select(datetime, count) %>%
filter(datetime < as.Date("2012-01-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(train) <- c('ds', 'y')
valid <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-01-01") & datetime < as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(valid) <- c('ds', 'y')
test <- bikes %>% select(datetime, count) %>%
filter(datetime >= as.Date("2012-07-01")) %>%
group_by(datetime) %>%
summarise(y = sum(count))
names(test) <- c('ds', 'y')
holidays <- filter(bikes, holiday == 1) %>%
select(datetime) %>%
distinct()
holidays$holiday = c('Martin Luther King', 'Emancipation Day', 'Independence Day',
'Labor Day', 'Columbus Day', 'Veterans Day', 'New Year',
'Martin Luther King', 'Emancipation Day', 'Independence Day',
'Labor Day', 'Columbus Day', 'Veterans Day'
names(holidays) <- c('ds', 'holiday')
p <- ggplot(train, aes(x = ds, y = y))
p <- p + geom_point(size = 0.5)
p
prophetGrid <- expand.grid(changepoint_prior_scale = c(0.05, 0.5, 0.001),
seasonality_prior_scale = c(100, 10, 1),
holidays_prior_scale = c(100, 10, 1),
capacity = c(6043, 6500, 7000, 8000),
growth = c('linear', 'logistic'))
